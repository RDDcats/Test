송신버퍼랑 수신버퍼랑 호스로 연결된것과 같다
tcp의 역할은 보낸 데이터를 확인하는것
네트웤에 패킷이 전송되는것은 고속도로상에 차가 지나가는것과 비슷하다
차가 잘 못갈때 = 막힐때 = 차가 많다
네트웤도 내에 패킷이 많으면 느려진다
네트웤망은 라우터에 의해서 연결되어있다.
100byte씩보내도 전혀다르게 받아진다(ex10byte)
그래서 버퍼에 패킷을 담아뒀다가 쪼개진걸 회수한다
ex) 1번 90byte 2번 30byte 1번 20byte 2번 30byte이런식
tcp할때는 100byte를 요청해도 가끔 90byte이렇게 올수있다
tcp 종특이라 이런부분을 고려해서 코드를 짜줘야함

tcp - tcp 사이에 전송하기전에 연결부터한다.
tcp가 제일 신경쓰는건 손실
최악의 손실케이스 
목적지까지 도착했을때 버퍼가 가득차있을경우
그래서 미리 버퍼사이즈를 알려준다

교환시 신경쓰는거 버퍼사이즈, 내가보내는 데이터번호, 트래픽

udp는 포장 서버에 여러 호스박아놔도 된다
포장된걸 슉슉 푸는느낌
tcp는 내가 직접 바이트를 잘라야되는데 udp는 자기가 포장을해준다
upd는 손실될수 있다.

제일먼저하는건 소켓 생성 
wasstartup - 윈도우 라이브러리 연결? 동적으로 할수도있고 정적으로 할수도있음
static - exe 파일을 만들때 참고한라이브러리 함수를 코드에 붙인다.
dynamic - exe파일을 실행할때 라이브러리함수들을 운영체제에 물어봐서 메모리로 올려서 실행한다.
한정된 메모리를 필요할때만 점유하고 내린다
단점 : 실행속도 느리다. 꽉차있으면 어캄

(예약은 기다리지 않는대신 비용을 지불해야한다. static dynamic)

윈도우하는데 이게 왜 들어가냐 윈도우는 dynamic 링킹을 제공

소켓할당했으면 해지해야한다(WSAcleanUp)

아 뭔말했는데 뭔지 모르겟음 뭐 소켓 프로토콜 정하고 핸들 넘겨준데

